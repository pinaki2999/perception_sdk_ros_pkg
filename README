1. Installation
===============

-- We assume that BRICS_3D and ROS(diamondback - at least) is already installed in your system. If not:
	-- For ROS Installation: http://www.ros.org/wiki/ROS/Installation
	-- For BRICS_3D Installation: < link will be updated soon :) >
 
-- Place the downloaded perception_sdk_ros_pkg such that it is reachable through your ROS_PACKAGE_PATH

-- To build the package:
	$ roscd perception_sdk_ros_pkg
	$ rosmake

-- If the package builds with no failures then go ahed and start detection the objects :)


2. Usage
========

	a.  HSV Limits Finder
	=====================	    
	First we need to find the best Hue and Saturation limits so that our perception system can 
	correctly distinguish the objects of interests in the current lightning conditions. To find 
	the HSV limits we will use the hsvLimitsFinder node.

	-- Start the kinect driver	
	
		$ roslaunch openni_camera openni_node.launch

	-- Start the HSV-Limit Finder node:
	
		$ rosrun perception_sdk_ros_pkg hsvLimitsFinder
	
	This will start extracting a ROI with some default Hue-Saturation Limits. To change the limits in real-time
	we need to use the dynamic_configure tool. 
	
	-- Start the dynamic configure tool, use:
		
		$rosrun dynamic_reconfigure reconfigure_gui

	Select the "/hsvLimitsFinder" in the dynamic configure gui to change the Hue-Saturation Limits. To see the extracted
	region based on current limits use the rviz tool and subscribe to the topic "extracted_region_1" with
	"Fixed_frame = /openni_rgb_optical_frame". For usage detail of rviz: http://www.ros.org/wiki/rviz
		
	
	To save the current configuration of Hue-Saturation Limits, interrupt the hsvLimitsFinder node using Ctrl+c. The program will 
	prompt for saving the configuration. Enter "y" to continue and "n" to exit. Please enter the full-relative path with the 
	filename when prompted. For example: "./currentHSVConfig.cfg"



	

